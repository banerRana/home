#"precision mediump float;";

using "glsl_defs.lgl";

type color is vec3;

frame model has dimension 3;
frame world has dimension 3;
frame camera has dimension 3;

varying cart3<model>.point vPosition;
uniform hom<model>.transformation<world> uModel;
uniform hom<world>.transformation<camera> uView;
varying cart3<model>.vector vNormal;

class light {
  public cart3<world>.point pos;
  public color diffColor;
};
uniform light uLight;

void main() {
    auto lightDir = normalize(uLight.pos - hom_reduce(uModel*homify(vPosition)));

    scalar diffuse = max(dot(lightDir, vNormal as! cart3<world>.normal), 0.);

    gl_FragColor = vec4(diffuse * uLight.diffColor, 1.0);
}
