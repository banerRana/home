#"precision mediump float;";

using "glsl_defs.lgl";

type color is vec3;

frame model has dimension 3;
frame world has dimension 3;
frame camera has dimension 3;

varying cart3<model>.point vPosition;
uniform hom<model>.transformation<world> uModel;
uniform hom<world>.transformation<camera> uView;
varying cart3<model>.vector vNormal;

uniform cart3<world>.point uLightPos;
uniform color uDiffColor;

void main() {
    cart3<world>.point posWorld = hom_reduce(uModel * homify(vPosition));
    cart3<world>.vector lightDir = normalize(uLightPos - posWorld);

    cart3<world>.direction normalWorld = normalize(hom_reduce(uModel * homify(vNormal)));
    scalar diffuse = max(dot(lightDir, normalWorld), 0.0);

    gl_FragColor = vec4(diffuse * uDiffColor, 1.0);
}
